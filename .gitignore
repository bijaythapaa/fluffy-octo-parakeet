# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

*.pyc
*.so
*.pyd
*~
.#*
*.lprof
*.swp
*.swo
.DS_Store
build
sklearn/datasets/__config__.py
sklearn/**/*.html

dist/
MANIFEST
doc/_build/
doc/auto_examples/
doc/modules/generated/
doc/datasets/generated/
doc/min_dependency_table.rst
doc/min_dependency_substitutions.rst
*.pdf
pip-log.txt
scikit_learn.egg-info/
.coverage
coverage
*.py,cover
.tags*
tags
covtype.data.gz
20news-18828/
20news-18828.tar.gz
coverages.zip
samples.zip
doc/coverages.zip
doc/samples.zip
coverages
samples
doc/coverages
doc/samples
*.prof
.tox/
.coverage
pip-wheel-metadata

lfw_preprocessed/
nips2010_pdf/

*.nt.bz2
*.tar.gz
*.tgz

examples/cluster/joblib
reuters/
benchmarks/bench_covertype_data/

*.prefs
.pydevproject
.idea
.vscode

*.c
*.cpp

!/**/src/**/*.c
!/**/src/**/*.cpp
*.sln
*.pyproj

# Used by py.test
.cache
.pytest_cache/
_configtest.o.d

# Used by mypy
.mypy_cache/

# files generated from a template
sklearn/utils/_seq_dataset.pyx
sklearn/utils/_seq_dataset.pxd
sklearn/linear_model/_sag_fast.pyx

# Cython debug symbols
cython_debug/
